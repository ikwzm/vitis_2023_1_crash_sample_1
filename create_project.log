#-----------------------------------------------------------
# Vivado v2023.1 (64-bit)
# SW Build 3865809 on Sun May  7 15:04:56 MDT 2023
# IP Build 3864474 on Sun May  7 20:36:21 MDT 2023
# SharedData Build 3865790 on Sun May 07 13:33:03 MDT 2023
# Start of session at: Sun Jun  4 08:52:01 2023
# Process ID: 640
# Current directory: /home/ichiro/work/vitis_2023_1_crash_sample_1
# Command line: vivado -mode batch -source create_project.tcl -log create_project.log
# Log file: /home/ichiro/work/vitis_2023_1_crash_sample_1/create_project.log
# Journal file: /home/ichiro/work/vitis_2023_1_crash_sample_1/vivado.jou
# Running On: Jabberwock, OS: Linux, CPU Frequency: 3600.000 MHz, CPU Physical cores: 1, Host memory: 34193 MB
#-----------------------------------------------------------
source create_project.tcl
# set project_directory       [file dirname [info script]]
# set project_name            "kv260_sample_platform"
# set board_part              [get_board_parts -quiet -latest_file_version "*kv260*"]
# set design_bd_tcl_file      [file join $project_directory "system_bd_2023.1.tcl"  ]
# if {[info exists project_name     ] == 0} {
#     set project_name        "project"
# }
# if {[info exists project_directory] == 0} {
#     set project_directory   [pwd]
# }
# cd $project_directory
# create_project -force $project_name $project_directory
# if       {[info exists board_part ] && [string equal $board_part  "" ] == 0} {
#     set_property "board_part"     $board_part      [current_project]
# } elseif {[info exists device_part] && [string equal $device_part "" ] == 0} {
#     set_property "part"           $device_part     [current_project]
# } else {
#     puts "ERROR: Please set board_part or device_part."
#     return 1
# }
WARNING: [Project 1-153] The current project device 'xc7vx485tffg1157-1' does not match with the device on the 'XILINX.COM:KV260_SOM:PART0:1.4' board part. A device change to match the device on 'XILINX.COM:KV260_SOM:PART0:1.4' board part is being done. Please upgrade the IP in the project via the upgrade_ip command or by selecting Reports => Reports IP Status.
INFO: [Project 1-152] Project part set to zynquplus (xck26-sfvc784-2lv-c)
# set_property "platform.version"     "1.0"                    [current_project]
# set_property "platform.vendor"      "ikwzm"                  [current_project]
# set_property "platform.board_id"    "kv260"                  [current_project]
# set_property "platform.name"        "kv260_sample"           [current_project]
# set_property "platform.description" "Kv260 sample platform"  [current_project]
# set_property "platform.extensible"                    {true} [current_project]
# if {[string equal [get_filesets -quiet sources_1] ""]} {
#     create_fileset -srcset sources_1
# }
# if {[string equal [get_filesets -quiet constrs_1] ""]} {
#     create_fileset -constrset constrs_1
# }
# if {[string equal [get_filesets -quiet sim_1] ""]} {
#     create_fileset -simset sim_1
# }
# set synth_1_flow     "Vivado Synthesis 2023"
# set synth_1_strategy "Vivado Synthesis Defaults"
# if {[string equal [get_runs -quiet synth_1] ""]} {
#     create_run -name synth_1 -flow $synth_1_flow -strategy $synth_1_strategy -constrset constrs_1
# } else {
#     set_property flow     $synth_1_flow     [get_runs synth_1]
#     set_property strategy $synth_1_strategy [get_runs synth_1]
# }
# current_run -synthesis [get_runs synth_1]
# set impl_1_flow      "Vivado Implementation 2023"
# set impl_1_strategy  "Vivado Implementation Defaults"
# if {[string equal [get_runs -quiet impl_1] ""]} {
#     create_run -name impl_1 -flow $impl_1_flow -strategy $impl_1_strategy -constrset constrs_1 -parent_run synth_1
# } else {
#     set_property flow     $impl_1_flow      [get_runs impl_1]
#     set_property strategy $impl_1_strategy  [get_runs impl_1]
# }
# current_run -implementation [get_runs impl_1]
# if {[info exists ip_repo_path_list] && [llength $ip_repo_path_list] > 0 } {
#     set_property ip_repo_paths $ip_repo_path_list [current_fileset]
#     update_ip_catalog
# }
# if {[info exists design_bd_tcl_file]} {
#     # 
#     # Read block design file
#     #
#     source $design_bd_tcl_file
#     #
#     # Save block design
#     #
#     regenerate_bd_layout
#     save_bd_design
#     #
#     # Generate wrapper files
#     #
#     set design_bd_name  [get_bd_designs]
#     make_wrapper -files [get_files $design_bd_name.bd] -top -import
#     #
#     # Generate target
#     #
#     set_property synth_checkpoint_mode None [get_files -all $design_bd_name.bd]
#     generate_target all [get_files -all $design_bd_name.bd]
#     #
#     #
#     #
#     set pfm_name [list [join [list [get_property "platform.vendor"   [current_project]] \
# 			           [get_property "platform.board_id" [current_project]] \
# 				   [get_property "platform.name"     [current_project]] \
#  				   [get_property "platform.version"  [current_project]] ] ":"]]
#     set_property pfm_name $pfm_name [get_files -all $design_bd_name.bd]
# }
## namespace eval _tcl {
## proc get_script_folder {} {
##    set script_path [file normalize [info script]]
##    set script_folder [file dirname $script_path]
##    return $script_folder
## }
## }
## variable script_folder
## set script_folder [_tcl::get_script_folder]
## set scripts_vivado_version 2023.1
## set current_vivado_version [version -short]
## if { [string first $scripts_vivado_version $current_vivado_version] == -1 } {
##    puts ""
##    catch {common::send_gid_msg -ssname BD::TCL -id 2041 -severity "ERROR" "This script was generated using Vivado <$scripts_vivado_version> and is being run in <$current_vivado_version> of Vivado. Please run the script in Vivado <$scripts_vivado_version> then open the design in Vivado <$current_vivado_version>. Upgrade the design by running \"Tools => Report => Report IP Status...\", then run write_bd_tcl to create an updated script."}
## 
##    return 1
## }
## set list_projs [get_projects -quiet]
## if { $list_projs eq "" } {
##    create_project project_1 myproj -part xck26-sfvc784-2LV-c
##    set_property BOARD_PART xilinx.com:kv260_som:part0:1.2 [current_project]
## }
## variable design_name
## set design_name system
## set errMsg ""
## set nRet 0
## set cur_design [current_bd_design -quiet]
## set list_cells [get_bd_cells -quiet]
## if { ${design_name} eq "" } {
##    # USE CASES:
##    #    1) Design_name not set
## 
##    set errMsg "Please set the variable <design_name> to a non-empty value."
##    set nRet 1
## 
## } elseif { ${cur_design} ne "" && ${list_cells} eq "" } {
##    # USE CASES:
##    #    2): Current design opened AND is empty AND names same.
##    #    3): Current design opened AND is empty AND names diff; design_name NOT in project.
##    #    4): Current design opened AND is empty AND names diff; design_name exists in project.
## 
##    if { $cur_design ne $design_name } {
##       common::send_gid_msg -ssname BD::TCL -id 2001 -severity "INFO" "Changing value of <design_name> from <$design_name> to <$cur_design> since current design is empty."
##       set design_name [get_property NAME $cur_design]
##    }
##    common::send_gid_msg -ssname BD::TCL -id 2002 -severity "INFO" "Constructing design in IPI design <$cur_design>..."
## 
## } elseif { ${cur_design} ne "" && $list_cells ne "" && $cur_design eq $design_name } {
##    # USE CASES:
##    #    5) Current design opened AND has components AND same names.
## 
##    set errMsg "Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
##    set nRet 1
## } elseif { [get_files -quiet ${design_name}.bd] ne "" } {
##    # USE CASES: 
##    #    6) Current opened design, has components, but diff names, design_name exists in project.
##    #    7) No opened design, design_name exists in project.
## 
##    set errMsg "Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
##    set nRet 2
## 
## } else {
##    # USE CASES:
##    #    8) No opened design, design_name not in project.
##    #    9) Current opened design, has components, but diff names, design_name not in project.
## 
##    common::send_gid_msg -ssname BD::TCL -id 2003 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."
## 
##    create_bd_design $design_name
## 
##    common::send_gid_msg -ssname BD::TCL -id 2004 -severity "INFO" "Making design <$design_name> as current_bd_design."
##    current_bd_design $design_name
## 
## }
INFO: [BD::TCL 103-2003] Currently there is no design <system> in project, so creating one...
Wrote  : </home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.srcs/sources_1/bd/system/system.bd> 
INFO: [BD::TCL 103-2004] Making design <system> as current_bd_design.
## common::send_gid_msg -ssname BD::TCL -id 2005 -severity "INFO" "Currently the variable <design_name> is equal to \"$design_name\"."
INFO: [BD::TCL 103-2005] Currently the variable <design_name> is equal to "system".
## if { $nRet != 0 } {
##    catch {common::send_gid_msg -ssname BD::TCL -id 2006 -severity "ERROR" $errMsg}
##    return $nRet
## }
## variable USING_IP_VLNV_LIST
## set USING_IP_VLNV_LIST [dict create]
## dict set USING_IP_VLNV_LIST zynq_ultra_ps_e  "xilinx.com:ip:zynq_ultra_ps_e:3.5"
## dict set USING_IP_VLNV_LIST xlslice          "xilinx.com:ip:xlslice:1.0"
## dict set USING_IP_VLNV_LIST proc_sys_reset   "xilinx.com:ip:proc_sys_reset:5.0"
## dict set USING_IP_VLNV_LIST clk_wiz          "xilinx.com:ip:clk_wiz:6.0"
## dict set USING_IP_VLNV_LIST axi_intc         "xilinx.com:ip:axi_intc:4.1"
## dict set USING_IP_VLNV_LIST axi_interconnect "xilinx.com:ip:axi_interconnect:2.1"
## set bCheckIPsPassed 1
## set bCheckIPs 1
## if { $bCheckIPs == 1 } {
##     set list_check_ips [join [dict values $USING_IP_VLNV_LIST] " "]
##     set list_ips_missing ""
##     common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."
## 
##     foreach ip_vlnv $list_check_ips {
##         set ip_obj [get_ipdefs -all $ip_vlnv]
##         if { $ip_obj eq "" } {
##               lappend list_ips_missing $ip_vlnv
##         }
##      }
## 
##      if { $list_ips_missing ne "" } {
##          catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
##          set bCheckIPsPassed 0
##      }
## }
INFO: [BD::TCL 103-2011] Checking if the following IPs exist in the project's IP catalog: xilinx.com:ip:zynq_ultra_ps_e:3.5 xilinx.com:ip:xlslice:1.0 xilinx.com:ip:proc_sys_reset:5.0 xilinx.com:ip:clk_wiz:6.0 xilinx.com:ip:axi_intc:4.1 xilinx.com:ip:axi_interconnect:2.1 .
## if { $bCheckIPsPassed != 1 } {
##     common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
##     return 3
## }
## proc create_zynq_ultra_ps { cell_name } {
##     variable USING_IP_VLNV_LIST
##     set ip_name zynq_ultra_ps_e
## 
##     if { [dict exists $USING_IP_VLNV_LIST $ip_name] != 1} {
##         catch {
## 	    common::send_gid_msg -ssname BD::TCL -id 3001 -severity "ERROR" \
## 		[format "\"%s\" not found in the USING_IP_VLNV_LIST." $ip_name]
## 	}
## 	return ""
##     }
##     
##     set cell [create_bd_cell -type ip -vlnv [dict get $USING_IP_VLNV_LIST $ip_name] $cell_name]
##     apply_bd_automation -rule xilinx.com:bd_rule:zynq_ultra_ps_e -config {apply_board_preset "1"} $cell
##     set_property -dict [list CONFIG.PSU__USE__M_AXI_GP0        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__M_AXI_GP1        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__M_AXI_GP2        {1}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_ACE        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_ACP        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_GP0        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_GP1        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_GP2        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_GP3        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_GP4        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_GP5        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__S_AXI_GP6        {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__MAXIGP2__DATA_WIDTH   {32} ] $cell
##     set_property -dict [list CONFIG.PSU__USE__IRQ0             {1}  ] $cell
##     set_property -dict [list CONFIG.PSU__USE__FABRIC__RST      {1}  ] $cell
##     set_property -dict [list CONFIG.PSU__FPGA_PL0_ENABLE       {1}  ] $cell
##     set_property -dict [list CONFIG.PSU__FPGA_PL1_ENABLE       {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__FPGA_PL2_ENABLE       {0}  ] $cell
##     set_property -dict [list CONFIG.PSU__FPGA_PL3_ENABLE       {0}  ] $cell
## 
##     set axi_prop ""
##     lappend axi_prop M_AXI_HPM0_FPD {memport "M_AXI_GP" sptag ""     memory "" is_range "false"}
##     lappend axi_prop M_AXI_HPM1_FPD {memport "M_AXI_GP" sptag ""     memory "" is_range "false"}
##     lappend axi_prop S_AXI_HPC0_FPD {memport "S_AXI_HP" sptag "HPC0" memory "" is_range "false"}
##     lappend axi_prop S_AXI_HPC1_FPD {memport "S_AXI_HP" sptag "HPC1" memory "" is_range "false"}
##     lappend axi_prop S_AXI_HP0_FPD  {memport "S_AXI_HP" sptag "HP0"  memory "" is_range "false"}
##     lappend axi_prop S_AXI_HP1_FPD  {memport "S_AXI_HP" sptag "HP1"  memory "" is_range "false"}
##     lappend axi_prop S_AXI_HP2_FPD  {memport "S_AXI_HP" sptag "HP2"  memory "" is_range "false"}
##     lappend axi_prop S_AXI_HP3_FPD  {memport "S_AXI_HP" sptag "HP3"  memory "" is_range "false"}
##     set_property PFM.AXi_PORT $axi_prop $cell
## 
##     return $cell
## }
## proc add_fan_enable { zynq_ultra_ps port_name prefix} {
##     variable USING_IP_VLNV_LIST
##     set ip_name xlslice
## 
##     if { [dict exists $USING_IP_VLNV_LIST $ip_name] != 1} {
##         catch {
## 	    common::send_gid_msg -ssname BD::TCL -id 3001 -severity "ERROR" \
## 		[format "\"%s\" not found in the USING_IP_VLNV_LIST." $ip_name]
## 	}
## 	return ""
##     }
## 
##     if { $port_name eq "" } {
##         set port_name FAN_EN
##     }
## 
##     if { $prefix eq "" } {
## 	set prefix ttc0
##     }
##     
##     set cell_name     [format "%s_slice" $prefix   ]
##     set net_name_din  [format "%s_din"   $cell_name]
##     set net_name_dout [format "%s_dout"  $cell_name]
## 
##     set_property -dict [list CONFIG.PSU__TTC0__WAVEOUT__ENABLE {1} ] $zynq_ultra_ps
##     set_property -dict [list CONFIG.PSU__TTC0__WAVEOUT__IO {EMIO}  ] $zynq_ultra_ps
## 
##     set cell [create_bd_cell -type ip -vlnv [dict get $USING_IP_VLNV_LIST $ip_name] $cell_name]
## 
##     set_property -dict [ list CONFIG.DIN_FROM {2} CONFIG.DIN_TO {2} CONFIG.DIN_WIDTH {3} ] $cell
## 
##     create_bd_port -dir O -from 0 -to 0 $port_name
##     connect_bd_net -net $net_name_dout [get_bd_pins $cell/Dout] [get_bd_ports $port_name] 
##     connect_bd_net -net $net_name_din  [get_bd_pins $cell/Din ] [get_bd_pins $zynq_ultra_ps/emio_ttc0_wave_o]
## }
## proc create_processor_system_reset { clock_net reset_net locked_net prefix } {
## 
##     variable USING_IP_VLNV_LIST
##     set ip_name   proc_sys_reset
##     set cell_name [format "%s" $prefix]
## 
##     if { [dict exists $USING_IP_VLNV_LIST $ip_name] != 1} {
##         catch {
## 	    common::send_gid_msg -ssname BD::TCL -id 3001 -severity "ERROR" \
## 		[format "\"%s\" not found in the USING_IP_VLNV_LIST." $ip_name]
## 	}
## 	return ""
##     }
## 
##     set cell [create_bd_cell -type ip -vlnv [dict get $USING_IP_VLNV_LIST $ip_name] $cell_name]
##     if { $clock_net  ne "" } {
##         connect_bd_net -net $clock_net  [get_bd_pins $cell/slowest_sync_clk]
##     }
##     if { $reset_net  ne "" } {
##         connect_bd_net -net $reset_net  [get_bd_pins $cell/ext_reset_in    ]
##     }
##     if { $locked_net ne "" } {
##         connect_bd_net -net $locked_net [get_bd_pins $cell/dcm_locked      ]
##     }
##     return $cell
## }
## proc create_clock_with_reset { clock_info prefix } {
## 
##     variable USING_IP_VLNV_LIST
##     set ip_name         clk_wiz
##     set cell_name       [format "%s_clk_wiz"    $prefix]
##     set locked_net_name [format "%s_clk_locked" $prefix]
##     set clk_prop        [dict create] 
## 
##     if { [dict exists $USING_IP_VLNV_LIST $ip_name] != 1} {
##         catch {
## 	    common::send_gid_msg -ssname BD::TCL -id 3001 -severity "ERROR" \
## 		[format "\"%s\" not found in the USING_IP_VLNV_LIST." $ip_name]
## 	}
## 	return ""
##     }
##     set clk_wiz [create_bd_cell -type ip -vlnv [dict get $USING_IP_VLNV_LIST $ip_name] $cell_name]
## 
##     if { [dict exists $clock_info clk_in1] } {
## 	set clock_in_info [dict get $clock_info clk_in1]
## 	if { [dict exists $clock_in_info net] } {
##             set clock_in_net [dict get $clock_in_info net]
## 	} else {
##             set clock_in_net [format "%s_clk_in" $prefix]
## 	}
##         if { [dict exists $clock_in_info port] } {
##             set clock_in_port [dict get $clock_in_info port]
## 	    connect_bd_net -net $clock_in_net [get_bd_pins $clk_wiz/clk_in1] [get_bd_pins $clock_in_port]
## 	} else {
## 	    connect_bd_net -net $clock_in_net [get_bd_pins $clk_wiz/clk_in1]
## 	}
##     }
## 	    
##     if { [dict exists $clock_info reset] } {
## 	set reset_info [dict get $clock_info reset]
## 	if { [dict exists $reset_info polarity] } {
## 	    set reset_polarity [dict get $reset_info polarity]
## 	} else {
## 	    set reset_polarity {High}
## 	}
## 	if { $reset_polarity eq {Low} } {
##             set_property -dict [list CONFIG.RESET_TYPE {ACTIVE_LOW} ] $clk_wiz
## 	}
## 	if { [dict exists $reset_info net] } {
## 	    set reset_net_name [dict get $reset_info net ]
## 	} else {
## 	    set reset_net_name [format "%s_reset" $prefix]
## 	}
## 	if { [dict exists $reset_info port] } {
## 	    set reset_port [dict get $reset_info port]
##             connect_bd_net -net $reset_net_name [get_bd_pins $clk_wiz/resetn] [get_bd_pins $reset_port]
## 	} else {
##             connect_bd_net -net $reset_net_name [get_bd_pins $clk_wiz/resetn]
## 	}
##     }
## 
##     foreach i {1 2 3 4 5 6 7} {
## 	set port [format "clk_out%d" $i]
##         if { [dict exists $clock_info $port] } {
## 	    set port_info [dict get $clock_info $port]
## 	    set freq_hz   [dict get $port_info freq]
## 	    set freq_mhz  [expr $freq_hz / 1000000.0]
## 	    set port_prop [list [format "CONFIG.CLKOUT%d_USED" $i] {true}]
## 	    lappend port_prop   [format "CONFIG.CLKOUT%d_REQUESTED_OUT_FREQ" $i] $freq_mhz
##             if { [dict exists $port_info net ] } {
## 	        set clock_net_name [dict get $port_info net]
## 	    } else {
##                 set clock_net_name [format "%s_%s" $prefix $port]
## 	    }
## 	    if { [dict exists $port_info name] } {
## 		set port_name [dict get $port_info name]
## 		lappend port_prop [format "CONFIG.CLK_OUT%d_PORT" $i] $port_name
## 	    } else {
## 		set port_name $port
## 	    }		
## 	    set_property -dict $port_prop $clk_wiz
##             connect_bd_net -net $clock_net_name [get_bd_pins $clk_wiz/$port_name]
## 	    set reset_cell_name [format "%s_reset_%d" $prefix $i]
##             set reset_cell [create_processor_system_reset $clock_net_name $reset_net_name $locked_net_name $reset_cell_name]
## 	    if { [dict exists $port_info is_default] } {
## 		set is_default [dict get $port_info is_default]
## 	    } else {
## 		set is_default "false"
## 	    }
## 	    if { [dict exists $port_info id ] } {
## 	        dict set clk_prop $port_name [dict create]
## 	        dict set clk_prop $port_name id             [dict get $port_info id]
## 	        dict set clk_prop $port_name is_default     $is_default
## 	        dict set clk_prop $port_name proc_sys_reset $reset_cell
## 	        dict set clk_prop $port_name status         "fixed"
## 	        dict set clk_prop $port_name freq_hz        $freq_hz
## 	    }
## 	}
##     }
##     set_property PFM.CLOCK $clk_prop $clk_wiz
## 
##     connect_bd_net -net $locked_net_name [get_bd_pins $clk_wiz/locked]
## 
##     return $clk_wiz
## }
## proc create_interrupt_controller { zynq_ultra_ps master_port master_clk prefix} {
## 
##     variable USING_IP_VLNV_LIST
##     set ip_name   axi_intc
##     set cell_name [format "%s"     $prefix]
##     set irq_name  [format "%s_irq" $prefix]
## 
##     if { [dict exists $USING_IP_VLNV_LIST $ip_name] != 1} {
##         catch {
## 	    common::send_gid_msg -ssname BD::TCL -id 3001 -severity "ERROR" \
## 		[format "\"%s\" not found in the USING_IP_VLNV_LIST." $ip_name]
## 	}
## 	return ""
##     }
##     set cell [create_bd_cell -type ip -vlnv [dict get $USING_IP_VLNV_LIST $ip_name] $cell_name]
##     set_property -dict [list CONFIG.C_IRQ_CONNECTION {1} ] $cell
## 
##     set config ""
##     lappend config Clk_master [list $master_clk]
##     lappend config Clk_slave  {Auto}
##     lappend config Clk_xvar   {Auto}
##     lappend config Master     [list $zynq_ultra_ps/$master_port]
##     lappend config Slave      [list $cell/s_axi]
##     lappend config ddr_seg    {Auto}
##     lappend config intc_ip    {New AXI Interconnect}
##     lappend config master_apm {0}
##     apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config $config [get_bd_intf_pins $cell/s_axi]
## 
##     connect_bd_net -net $irq_name [get_bd_pins $cell/irq] [get_bd_pins $zynq_ultra_ps/pl_ps_irq0]
##     set_property PFM.IRQ {intr { id 0 range 32 }} $cell
## 
##     return $cell
## }
## proc create_root_design { parentCell } {
## 
##   variable script_folder
##   variable design_name
## 
##   if { $parentCell eq "" } {
##      set parentCell [get_bd_cells /]
##   }
## 
##   # Get object for parentCell
##   set parentObj [get_bd_cells $parentCell]
##   if { $parentObj == "" } {
##      catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
##      return
##   }
##   #
##   # Make sure parentObj is hier blk
##   #
##   set parentType [get_property TYPE $parentObj]
##   if { $parentType ne "hier" } {
##      catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
##      return
##   }
##   #
##   # Save current instance; Restore later
##   #
##   set oldCurInst [current_bd_instance .]
##   #
##   # Set parent object as current
##   #
##   current_bd_instance $parentObj
##   #
##   # Create instance: zynq_ultra_ps_e_0 and set properties
##   #
##   set zynq_ultra_ps_e_0 [create_zynq_ultra_ps "zynq_ultra_ps_e_0"]
##   # 
##   # Add FAN_EN
##   #
##   add_fan_enable $zynq_ultra_ps_e_0 "FAN_EN" "ttc0"
##   # 
##   # Add System Clock and Reset
##   #
##   set clock_info [dict create \
##     reset    [dict create net  "pl_reset0" port $zynq_ultra_ps_e_0/pl_resetn0 polarity {Low} ] \
##     clk_in1  [dict create net  "pl_clk0"   port $zynq_ultra_ps_e_0/pl_clk0] \
##     clk_out1 [dict create name "clk_100" net "sys_clk_100" id "0" is_default "false" freq "100000000"] \
##     clk_out2 [dict create name "clk_200" net "sys_clk_200" id "1" is_default "true"  freq "200000000"] \
##     clk_out3 [dict create name "clk_400" net "sys_clk_300" id "2" is_default "false" freq "400000000"] \
##   ]
##   set sys_clk [create_clock_with_reset $clock_info "sys"]
##   #
##   # Add axi interrupt controller
##   #
##   set axi_intc_0 [create_interrupt_controller $zynq_ultra_ps_e_0 M_AXI_HPM0_LPD $sys_clk/clk_out2 "axi_intc_0"]
##   #
##   # Restore current instance
##   #
##   current_bd_instance $oldCurInst
## 
##   save_bd_design
## }
## create_root_design ""
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
INFO: [Device 21-403] Loading part xck26-sfvc784-2LV-c
create_bd_cell: Time (s): cpu = 00:00:09 ; elapsed = 00:00:13 . Memory (MB): peak = 0.000 ; gain = 0.000 ; free physical = 20961 ; free virtual = 119452
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
Slave segment '/axi_intc_0/S_AXI/Reg' is being assigned into address space '/zynq_ultra_ps_e_0/Data' at <0x8000_0000 [ 64K ]>.
Wrote  : </home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.srcs/sources_1/bd/system/system.bd> 
## common::send_gid_msg -ssname BD::TCL -id 2053 -severity "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."
WARNING: [BD::TCL 103-2053] This Tcl script was generated from a block design that has not been validated. It is possible that design <system> may result in errors during validation.
INFO: [xilinx.com:ip:clk_wiz:6.0-1] /sys_clk_wiz clk_wiz propagate
INFO: [xilinx.com:ip:clk_wiz:6.0-1] /sys_clk_wiz clk_wiz propagate
WARNING: [BD 41-237] Bus Interface property AWUSER_WIDTH does not match between /ps8_0_axi_periph/s00_couplers/auto_pc/S_AXI(0) and /zynq_ultra_ps_e_0/M_AXI_HPM0_LPD(16)
WARNING: [BD 41-237] Bus Interface property ARUSER_WIDTH does not match between /ps8_0_axi_periph/s00_couplers/auto_pc/S_AXI(0) and /zynq_ultra_ps_e_0/M_AXI_HPM0_LPD(16)
CRITICAL WARNING: [BD 41-759] The input pins (listed below) are either not connected or do not have a source port, and they don't have a tie-off specified. These pins are tied-off to all 0's to avoid error in Implementation flow.
Please check your design and connect them as needed: 
/axi_intc_0/intr

Wrote  : </home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.srcs/sources_1/bd/system/system.bd> 
Verilog Output written to : /home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.gen/sources_1/bd/system/synth/system.v
Verilog Output written to : /home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.gen/sources_1/bd/system/sim/system.v
Verilog Output written to : /home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.gen/sources_1/bd/system/hdl/system_wrapper.v
INFO: [BD 41-1662] The design 'system.bd' is already validated. Therefore parameter propagation will not be re-run.
CRITICAL WARNING: [BD 41-759] The input pins (listed below) are either not connected or do not have a source port, and they don't have a tie-off specified. These pins are tied-off to all 0's to avoid error in Implementation flow.
Please check your design and connect them as needed: 
/axi_intc_0/intr

Verilog Output written to : /home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.gen/sources_1/bd/system/synth/system.v
Verilog Output written to : /home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.gen/sources_1/bd/system/sim/system.v
Verilog Output written to : /home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.gen/sources_1/bd/system/hdl/system_wrapper.v
INFO: [xilinx.com:ip:zynq_ultra_ps_e:3.5-0] system_zynq_ultra_ps_e_0_0: 
Changes in your design (including the PCW configuration settings) are not automatically exported from Vivado to Xilinx's SDK, Petalinux or Yocto.
This is by design to avoid disrupting existing embedded development efforts. To have any changes of your design taking effect in the embedded software flow please export your
design by going through Vivado's main menu, click on File, then Export finally select Export Hardware, please ensure you click on the Include BitStream option.
The auto-generated HDF file is all you need to import in Xilinx's SDK, Petalinux or Yocto for your changes to be reflected in the Embedded Software Flow.
For more information, please consult PG201, section: Exporting PCW Settings to Embedded Software Flows
INFO: [PSU-0] Address Range of DDR (0x7ff00000 to 0x7fffffff) is reserved by PMU for internal purpose.
INFO: [IP_Flow 19-5611] Unable to find an associated reset port for the interface 'M_AXI_HPM0_LPD'. A default connection has been created.
INFO: [BD 41-1029] Generation completed for the IP Integrator block zynq_ultra_ps_e_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block ttc0_slice .
INFO: [BD 41-1029] Generation completed for the IP Integrator block sys_clk_wiz .
INFO: [BD 41-1029] Generation completed for the IP Integrator block sys_reset_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block sys_reset_2 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block sys_reset_3 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_intc_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rst_ps8_0_99M .
INFO: [BD 41-1029] Generation completed for the IP Integrator block ps8_0_axi_periph/s00_couplers/auto_pc .
Exporting to file /home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.gen/sources_1/bd/system/hw_handoff/system.hwh
Generated Hardware Definition File /home/ichiro/work/vitis_2023_1_crash_sample_1/kv260_sample_platform.gen/sources_1/bd/system/synth/system.hwdef
generate_target: Time (s): cpu = 00:00:16 ; elapsed = 00:00:18 . Memory (MB): peak = 0.000 ; gain = 0.000 ; free physical = 20760 ; free virtual = 119251
# if {[info exists constrs_file_list] && [llength $constrs_file_list] > 0 } {
#     add_files    -fileset constrs_1 -norecurse $constrs_file_list
# }
INFO: [Common 17-206] Exiting Vivado at Sun Jun  4 08:52:46 2023...
